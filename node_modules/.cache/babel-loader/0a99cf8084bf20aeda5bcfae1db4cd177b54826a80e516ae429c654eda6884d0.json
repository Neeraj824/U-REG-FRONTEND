{"ast":null,"code":"var _jsxFileName = \"/Applications/SSO/U-Reg/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [latestRates, setLatestRates] = useState([]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    fetchLatestRates();\n  }, []);\n  const fetchLatestRates = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/latest-rates');\n      setLatestRates(response.data);\n    } catch (error) {\n      console.error('Error fetching latest rates:', error);\n    }\n  };\n  const fetchHistoricalRates = async date => {\n    try {\n      const formattedDate = format(date, 'yyyy-MM-dd');\n      const response = await axios.get(`http://localhost:3001/api/historical-rates/${formattedDate}`);\n      setHistoricalRates(response.data);\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n  const formatDate = date => {\n    return format(new Date(date), 'dd-MM-yyyy');\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    fetchHistoricalRates(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Yet Another Forex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fVwd0AzZNWtFfI1AN3xqyjKt8b0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","jsxDEV","_jsxDEV","App","_s","latestRates","setLatestRates","historicalRates","setHistoricalRates","selectedDate","setSelectedDate","Date","fetchLatestRates","response","get","data","error","console","fetchHistoricalRates","date","formattedDate","formatDate","handleDateChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/SSO/U-Reg/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\n\nconst App = () => {\n  const [latestRates, setLatestRates] = useState([]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    fetchLatestRates();\n  }, []);\n\n  const fetchLatestRates = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/latest-rates');\n      setLatestRates(response.data);\n    } catch (error) {\n      console.error('Error fetching latest rates:', error);\n    }\n  };\n\n  const fetchHistoricalRates = async (date) => {\n    try {\n      const formattedDate = format(date, 'yyyy-MM-dd');\n      const response = await axios.get(`http://localhost:3001/api/historical-rates/${formattedDate}`);\n      setHistoricalRates(response.data);\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n  const formatDate = (date) => {\n    return format(new Date(date), 'dd-MM-yyyy');\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    fetchHistoricalRates(date);\n  };\n\n  return (\n    <div className=\"container\">\n      <div>\n          <span>Yet Another Forex</span>\n      </div>\n     \n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAIa,IAAI,CAAC,CAAC,CAAC;EAE5Dd,SAAS,CAAC,MAAM;IACde,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,wCAAwC,CAAC;MAC1ER,cAAc,CAACO,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,oBAAoB,GAAG,MAAOC,IAAI,IAAK;IAC3C,IAAI;MACF,MAAMC,aAAa,GAAGpB,MAAM,CAACmB,IAAI,EAAE,YAAY,CAAC;MAChD,MAAMN,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,8CAA6CM,aAAc,EAAC,CAAC;MAC/FZ,kBAAkB,CAACK,QAAQ,CAACE,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EACD,MAAMK,UAAU,GAAIF,IAAI,IAAK;IAC3B,OAAOnB,MAAM,CAAC,IAAIW,IAAI,CAACQ,IAAI,CAAC,EAAE,YAAY,CAAC;EAC7C,CAAC;EAED,MAAMG,gBAAgB,GAAIH,IAAI,IAAK;IACjCT,eAAe,CAACS,IAAI,CAAC;IACrBD,oBAAoB,CAACC,IAAI,CAAC;EAC5B,CAAC;EAED,oBACEjB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBtB,OAAA;MAAAsB,QAAA,eACItB,OAAA;QAAAsB,QAAA,EAAM;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA5CID,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}