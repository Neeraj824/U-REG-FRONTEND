{"ast":null,"code":"var _jsxFileName = \"/Applications/SSO/U-Reg/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [latestRates, setLatestRates] = useState([]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    fetchLatestRates();\n  }, []);\n  const fetchLatestRates = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/latest-rates');\n      setLatestRates(response.data);\n    } catch (error) {\n      console.error('Error fetching latest rates:', error);\n    }\n  };\n  const fetchHistoricalRates = async date => {\n    try {\n      const formattedDate = format(date, 'yyyy-MM-dd');\n      const response = await axios.get(`http://localhost:3001/api/historical-rates/${formattedDate}`);\n      setHistoricalRates(response.data);\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    fetchHistoricalRates(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Exchange Rates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), latestRates.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Effective Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: latestRates.map((rate, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: rate.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rate.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rate.rate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rate.effective_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading latest exchange rates...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Historical Exchange Rates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: format(selectedDate, 'yyyy-MM-dd'),\n      onChange: e => handleDateChange(new Date(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), historicalRates.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Effective Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: historicalRates.map(rate => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: rate.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rate.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rate.rate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: format(rate.effective_date, 'yyyy-MM-dd')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, rate.code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No historical rates available for the selected date.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fVwd0AzZNWtFfI1AN3xqyjKt8b0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","jsxDEV","_jsxDEV","App","_s","latestRates","setLatestRates","historicalRates","setHistoricalRates","selectedDate","setSelectedDate","Date","fetchLatestRates","response","get","data","error","console","fetchHistoricalRates","date","formattedDate","handleDateChange","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","rate","index","code","name","effective_date","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Applications/SSO/U-Reg/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\n\nconst App = () => {\n  const [latestRates, setLatestRates] = useState([]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    fetchLatestRates();\n  }, []);\n\n  const fetchLatestRates = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/latest-rates');\n      setLatestRates(response.data);\n    } catch (error) {\n      console.error('Error fetching latest rates:', error);\n    }\n  };\n\n  const fetchHistoricalRates = async (date) => {\n    try {\n      const formattedDate = format(date, 'yyyy-MM-dd');\n      const response = await axios.get(`http://localhost:3001/api/historical-rates/${formattedDate}`);\n      setHistoricalRates(response.data);\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    fetchHistoricalRates(date);\n  };\n\n  return (\n    <div>\n      <h1>Latest Exchange Rates</h1>\n      {latestRates.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Currency Code</th>\n              <th>Currency Name</th>\n              <th>Rate</th>\n              <th>Effective Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {latestRates.map((rate,index) => (\n              <tr key={index}>\n                <td>{rate.code}</td>\n                <td>{rate.name}</td>\n                <td>{rate.rate}</td>\n                <td>{rate.effective_date}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>Loading latest exchange rates...</p>\n      )}\n\n      <h2>Historical Exchange Rates</h2>\n      <input type=\"date\" value={format(selectedDate, 'yyyy-MM-dd')} onChange={(e) => handleDateChange(new Date(e.target.value))} />\n\n      {historicalRates.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Currency Code</th>\n              <th>Currency Name</th>\n              <th>Rate</th>\n              <th>Effective Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {historicalRates.map((rate) => (\n              <tr key={rate.code}>\n                <td>{rate.code}</td>\n                <td>{rate.name}</td>\n                <td>{rate.rate}</td>\n                <td>{format(rate.effective_date,'yyyy-MM-dd')}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>No historical rates available for the selected date.</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}